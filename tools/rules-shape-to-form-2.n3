@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix sh:   <http://www.w3.org/ns/shacl#> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .
@prefix ui: <http://www.w3.org/ns/ui#>.

@prefix xf: <http://www.w3.org/ns/pim/xform#>. # @@ think of where to put this

#  2020-10-04  Try 2  -- more rules needed for shsh than for ontancts.
#
  { ?s a sh:NodeShape; sh:targetClass ?class }
      =>
  { ?s  xf:correspondingForm [ a ui:Form; is ui:creationForm of ?class ] } .

# Associated class

  { ?s a sh:NodeShape; sh:targetClass ?class; xf:correspondingForm ?f }
      =>
  { ?f a ui:Form; is ui:creationForm of ?class } .

# Simple text field
{ ?s  xf:correspondingForm ?f;
    sh:property ?arc .
    ?arc sh:path ?property; # Note path can be more complex
          sh:datatype xsd:string;
    } => {  ?f ui:part [ a ui:SingleLineTextField ; # @@ Could be multi
       ui:property ?property ] } .

# DatTime field

 { ?s  xf:correspondingForm ?f;
     sh:property ?arc .
     ?arc sh:path ?property;
           sh:datatype xsd:dateTime;
     } => {  ?f ui:part [ a ui:DateTimeField;
            ui:property ?property ]
     } .

# Fixed data field

 { ?s  xf:correspondingForm ?f;
     sh:property ?arc .
     ?arc sh:path ?property;
           sh:value ?value;
     } => {  ?f ui:part [ a ui:Choice;
            ui:default ?value;
            ui:fixed true;
            ui:property ?property ]
     } .

# Nested shape, nested form

{ ?s  xf:correspondingForm ?f;
    sh:property ?arc .
    ?arc sh:path ?property.
    ?shape2 sh:targetObjectsOf ?property.
} => {  ?f ui:part [ a ui:Choice;
      ui:canMintNew true;
      ui:from owl:Thing; # @@ target class -- pull from range of property? can leave out?
      ui:use [ is xf:cat of ?shape2 ];
      ui:property ?property ]
} .

#ends
